package
{
  import flash.display.Sprite;
  import flash.events.*;
  import flash.geom.*;
  import flash.display.Bitmap;
  import flash.display.BitmapData;
  import flash.net.URLRequest;
  import flash.display.Loader;
  
  public class OrbitVM extends Sprite {
    private var timestep:int;
    private var vm:vm_state;
    private var vm_output:Array;

    private var earth:Sprite;
    private var earth_bitmap:Bitmap;

    private var mysat:Satellite;
    private var our_orbit:Orbit;

    private var targetsat:Satellite;
    private var target_orbit:Orbit;

    public function OrbitVM() {
      timestep = 0;
      vm_output = new Array();
      var loader:Loader = new Loader();
      loader.contentLoaderInfo.addEventListener(Event.COMPLETE, completeHandler);
      loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);

      var request:URLRequest = new URLRequest("earth.gif");
      loader.x = 80;
      loader.load(request);

      vm = new vm_state_bin3;
      vm.vm_init(vm_output, 3004, 0, 0);
    }

    private function ioErrorHandler(event:IOErrorEvent):void {
      trace("Unable to load tiles.gif");
    }

    // loader garbage
    private function completeHandler(event:Event):void {
      var loader:Loader = Loader(event.target.loader);
      var m:Matrix = new Matrix();
      earth_bitmap = Bitmap(loader.content);
      earth = new Sprite();
      m.tx = -127.5;
      m.ty = -127.5;
      earth.graphics.beginBitmapFill(earth_bitmap.bitmapData, m, false, false);
      earth.graphics.drawRect(-127.5, -127.5, 256, 256);

      graphics.beginFill(0);
      graphics.drawRect(0,0, 760,570);

      addChild(earth);
      
      mysat = new Satellite();
      addChild(mysat);
      targetsat = new Satellite();
      addChild(targetsat);

      sim_step(1);

      addEventListener(Event.ENTER_FRAME, onEnterFrame);
    }

    private static function g(r:vector2):vector2 {
      var R:Number = r.abs();
      R = R*R*R;
      return new vector2(-Orbit.mu*r.x/R, -Orbit.mu*r.y/R);
    }

    private function sim_step(speed:int):void {
      var i:int;
      for(i=0;i<speed-1;i++)
        vm.vm_step(vm_output, 0, 0);

      var s0:vector2 = new vector2(-vm_output[2], -vm_output[3]);
      var t0:vector2 = new vector2(vm_output[4], vm_output[5]).add(s0);
      vm.vm_step(vm_output, 0, 0);
      var s1:vector2 = new vector2(-vm_output[2], -vm_output[3]);
      var t1:vector2 = new vector2(vm_output[4], vm_output[5]).add(s1);
      var v1:vector2 = s1.sub(s0).sub(g(s0).div(2));
      var tv1:vector2 = t1.sub(t0).sub(g(t0).div(2));

      //var wscale:Number = 570/(2*s1.abs());
      var wscale:Number = 560/(2*t1.abs());
      // wscale is the number of pixels per unit distance

      earth.x = 760/2;
      earth.y = 570/2;
      earth.scaleX = earth.scaleY = (6357000/127.5)*wscale;
      mysat.x = 760/2 + s1.x*wscale;
      mysat.y = 570/2 + s1.y*wscale;
      targetsat.x = 760/2 + t1.x*wscale;
      targetsat.y = 570/2 + t1.y*wscale;

      timestep += 1;
      earth.rotation = -timestep*360/86400;

      if(our_orbit) removeChild(our_orbit);
      our_orbit = new Orbit(s1,v1,wscale);
      our_orbit.x = 760/2;
      our_orbit.y = 570/2;
      addChild(our_orbit);

      if(target_orbit) removeChild(target_orbit);
      target_orbit = new Orbit(t1,tv1,wscale);
      //target_orbit.scaleX = our_orbit.scaleY = wscale;
      target_orbit.x = 760/2;
      target_orbit.y = 570/2;
      addChild(target_orbit);
    }

    public function onEnterFrame(evt:Event):void {
      sim_step(10);
    } 
  }
}

import flash.display.Sprite;
import flash.geom.*;

class Satellite extends Sprite {
  public function Satellite() {
    graphics.lineStyle(0.5);
    graphics.beginFill(0xffffff);
    graphics.drawCircle(0, 0, 5);
  }
}

class vm_state
{
  public function vm_init(output:Array, scenario:Number, DVx:Number, DVy:Number):void { }
  public function vm_step(output:Array, DVx:Number, DVy:Number):void { }
}

class vector2
{
  public var x:Number,y:Number;
  public function vector2(_x:Number=0, _y:Number=0) { x=_x; y=_y; }

  // i sure wish this had operator overloading
  public function add(b:vector2):vector2 { return new vector2(x+b.x, y+b.y); }
  public function sub(b:vector2):vector2 { return new vector2(x-b.x, y-b.y); }
  public function mul(s:Number):vector2 { return new vector2(x*s, y*s); }
  public function div(s:Number):vector2 { return new vector2(x / s, y / s); }

  public function dot(b:vector2):Number { return x*b.x + y*b.y; }
  public function cross_xy(b:vector2):Number { return x*b.y - y*b.x; }
  public function cross_z(z:Number):vector2 { return new vector2(y*z, -x*z); }

  public function abs():Number { return Math.sqrt(x*x + y*y); }
}

class Orbit extends Sprite {
  public static var mu:Number = 4.004568e14;

  private var e:vector2;
  private var p:Number, h:Number;

  public function Orbit(r:vector2, v:vector2, scale:Number) {
    var v2:Number = v.dot(v);
    var R:Number = r.abs();
    if(v2 == 0) {
      // circular orbit
      p = R;
      e = v;
      graphics.lineStyle(3, 0xffffff, 0.3);
      graphics.drawCircle(0,0, R*scale);
    } else {
      h = r.cross_xy(v);
      p = h*h/mu;
      // this is why we need operator overloading.
      e = ((r.mul(v2).sub(v.mul(r.dot(v)))).div(mu)).sub(r.div(R));
      graphics.lineStyle(3, 0xffffff, 0.3);
      var a:Number = mu*R/(2*mu - v2*R); // width is 2a
      var emag:Number = e.abs();
      if(emag < 1) {
        // elliptical orbit
        var b:Number = Math.sqrt(a*a*(1-emag*emag));
        var x1:Number = p/(1+emag);
        graphics.drawEllipse(scale*(x1-2*a), -scale*b, scale*2*a, 2*scale*b);
        if(emag > 1e-8) rotation = 180*Math.atan2(e.y, e.x)/Math.PI;
      } else {
        // parabolic or hyperbolic orbit; don't try to draw these
      }
    }
  }
}

class vm_state_bin1 extends vm_state {
  private var d265:Number, d248:Number, d263:Number, d264:Number, d260:Number, d262:Number, d255:Number,
         d250:Number, d249:Number, d254:Number, d251:Number, d258:Number, d257:Number, d256:Number, d253:Number,
         d252:Number, d259:Number, d261:Number;

  public override function vm_init(output:Array, scenario:Number, DVx:Number, DVy:Number):void {
    var _0:Number = scenario - 1001;
    var _1:Number = scenario - 1002;
    var _2:Number = scenario - 1003;
    var _3:Number = scenario - 1004;
    var _4:Number = _3 == 0 ? 0 : 0;
    var _5:Number = _0 == 0 ? 6.557e+06 : _1 == 0 ? 6.357e+06 : _2 == 0 ? 8.357e+06 : _4;
    var _6:Number = _0 == 0 ? 0 : _1 == 0 ? -4719.32 : _2 == 0 ? 0 : _3 == 0 ? -7875.22 : 0;
    var _7:Number = 0 - _5;
    var _8:Number = _0 == 0 ? 0 : _1 == 0 ? -6.357e+06 : _2 == 0 ? 0 : _3 == 0 ? 6.457e+06 : 0;
    var _9:Number = 0 - _8;
    var _10:Number = Math.sqrt(_7 * _7 + _9 * _9);
    var _11:Number = 4.00457e+14 / (_10 * _10 * _10);
    var _12:Number = _7 * _11;
    var _13:Number = _5 + _6 + _12 * 0.5;
    var _14:Number = _0 == 0 ? -7814.93 : _1 == 0 ? -4719.32 : _2 == 0 ? -6922.34 : _4;
    var _15:Number = _9 * _11;
    var _16:Number = _8 + _14 + _15 * 0.5;
    var _17:Number = Math.sqrt(_13 * _13 + _16 * _16);
    output[0] = _17 - 6.357e+06 < 0 ? -1 : 0;
    output[1] = 10000;
    var _18:Number = 0 - _13;
    output[2] = _18;
    var _19:Number = 0 - _16;
    output[3] = _19;
    output[4] = _0 == 0 ? 4.2164e+07 : _1 == 0 ? 2.1082e+07 : _2 == 0 ? 2.81093e+07 : _3 == 0 ? 3.83309e+07 : 0;
    d248 = 1;
    d249 = 0;
    d250 = 0;
    d251 = 6e+24;
    d252 = 0;
    d253 = 0;
    d254 = _13;
    d255 = _16;
    d256 = _0 == 0 ? 1 : _1 == 0 ? 1 : _2 == 0 ? 1 : _3 == 0 ? 1 : 0;
    var _20:Number = Math.sqrt(_18 * _18 + _19 * _19);
    var _21:Number = 4.00457e+14 / (_20 * _20 * _20);
    d257 = _6 + (_18 * _21 + _12) / 2;
    d258 = _14 + (_19 * _21 + _15) / 2;
    var _22:Number = _17 - (_0 == 0 ? 4.2164e+07 : _1 == 0 ? 2.1082e+07 : _2 == 0 ? 2.81093e+07 : _3 == 0 ? 3.83309e+07 : 0);
    var _23:Number = _22 < 0 ? 0 - _22 : _22;
    var _24:Number = _23 - 1000;
    d259 = _24 < 0 ? 1 : 0;
    d260 = _24 < 0 ? _23 : 0;
    d261 = 10000;
    d262 = _0 == 0 ? 4.2164e+07 : _1 == 0 ? 2.1082e+07 : _2 == 0 ? 2.81093e+07 : _3 == 0 ? 3.83309e+07 : 0;
    d263 = 1000;
    d264 = 2000;
    d265 = 29;
  }

  public override function vm_step(output:Array, DVx:Number, DVy:Number):void {
    var _25:Number = d249 - d254;
    var _26:Number = 6.67428e-11 * d251;
    var _27:Number = d250 - d255;
    var _28:Number = Math.sqrt(_25 * _25 + _27 * _27);
    var _29:Number = _26 / (_28 * _28 * _28);
    var _30:Number = _25 * _29;
    var _31:Number = d254 + d257 + (DVx + _30) * 0.5;
    var _32:Number = _31 - d249;
    var _33:Number = _27 * _29;
    var _34:Number = d255 + d258 + (DVy + _33) * 0.5;
    var _35:Number = _34 - d250;
    var _36:Number = Math.sqrt(_32 * _32 + _35 * _35);
    var _37:Number = Math.sqrt(DVx * DVx + DVy * DVy);
    var _38:Number = d261 - _37;
    var _39:Number = _36 - d262;
    var _40:Number = _39 < 0 ? 0 - _39 : _39;
    var _41:Number = _40 - 1000;
    output[0] = _36 - 6.357e+06 < 0 ? -1 : 10000 - _37 < 0 ? -1 : _38 < 0 ? -1 : 900 - (_41 < 0 ? _37 == 0 ? d259 + 1 : 0 : 0) < 0 ? d265 + (10000 - _38) / 10000 * 45 + 25 : 0;
    output[1] = _38;
    var _42:Number = d249 - _31;
    output[2] = _42;
    var _43:Number = d250 - _34;
    output[3] = _43;
    output[4] = d262;
    d248 = d248 + 1;
    d249 = d249;
    d250 = d250;
    d251 = d251;
    d252 = d252;
    d253 = d253;
    d254 = _31;
    d255 = _34;
    d256 = d256;
    var _44:Number = Math.sqrt(_42 * _42 + _43 * _43);
    var _45:Number = _26 / (_44 * _44 * _44);
    d257 = d257 + DVx + (_42 * _45 + _30) / 2;
    d258 = d258 + DVy + (_43 * _45 + _33) / 2;
    d259 = _41 < 0 ? _37 == 0 ? d259 + 1 : 0 : 0;
    d260 = _41 < 0 ? _37 == 0 ? d260 + _40 : 0 : 0;
    d261 = _38;
    d262 = d262;
    var _46:Number = d263 - 1;
    d263 = _46 == 0 ? d264 : _46;
    d264 = _46 == 0 ? d264 * 2 : d264;
    d265 = _46 == 0 ? d265 - 1 : d265;
  }
}

class vm_state_bin2 extends vm_state {
  private var d400:Number, d379:Number, d398:Number, d399:Number, d396:Number, d391:Number, d381:Number,
         d390:Number, d380:Number, d382:Number, d394:Number, d386:Number, d385:Number, d389:Number, d393:Number,
         d388:Number, d392:Number, d387:Number, d384:Number, d383:Number, d395:Number, d397:Number;

  public override function vm_init(output:Array, scenario:Number, DVx:Number, DVy:Number):void {
    var _0:Number = scenario - 2001;
    var _1:Number = scenario - 2002;
    var _2:Number = scenario - 2003;
    var _3:Number = scenario - 2004;
    var _4:Number = scenario - 3001;
    var _5:Number = scenario - 3002;
    var _6:Number = scenario - 3003;
    var _7:Number = scenario - 3004;
    var _8:Number = _7 == 0 ? 0 : 0;
    var _9:Number = _0 == 0 ? 6.557e+06 : _1 == 0 ? 6.357e+06 : _2 == 0 ? 8.357e+06 : _3 == 0 ? 0 : _4 == 0 ? 6.557e+06 : _5 == 0 ? 6.357e+06 : _6 == 0 ? 8.357e+06 : _8;
    var _10:Number = _0 == 0 ? 0 : _1 == 0 ? -4719.32 : _2 == 0 ? 0 : _3 == 0 ? 7875.22 : _4 == 0 ? 0 : _5 == 0 ? -4719.32 : _6 == 0 ? 0 : _7 == 0 ? 7875.22 : 0;
    var _11:Number = 0 - _9;
    var _12:Number = _0 == 0 ? 0 : _1 == 0 ? -6.357e+06 : _2 == 0 ? 0 : _3 == 0 ? 6.457e+06 : _4 == 0 ? 0 : _5 == 0 ? -6.357e+06 : _6 == 0 ? 0 : _7 == 0 ? 6.457e+06 : 0;
    var _13:Number = 0 - _12;
    var _14:Number = Math.sqrt(_11 * _11 + _13 * _13);
    var _15:Number = 4.00457e+14 / (_14 * _14 * _14);
    var _16:Number = _11 * _15;
    var _17:Number = _9 + _10 + _16 * 0.5;
    var _18:Number = _0 == 0 ? -7814.93 : _1 == 0 ? -4719.32 : _2 == 0 ? -6922.34 : _3 == 0 ? 0 : _4 == 0 ? -7814.93 : _5 == 0 ? -4719.32 : _6 == 0 ? -6922.34 : _8;
    var _19:Number = _13 * _15;
    var _20:Number = _12 + _18 + _19 * 0.5;
    output[0] = Math.sqrt(_17 * _17 + _20 * _20) - 6.357e+06 < 0 ? -1 : 0;
    output[1] = 50000;
    var _21:Number = 0 - _17;
    output[2] = _21;
    var _22:Number = 0 - _20;
    output[3] = _22;
    var _23:Number = _3 == 0 ? 0 : 0;
    var _24:Number = _0 == 0 ? 8.357e+06 : _1 == 0 ? 6.357e+07 : _2 == 0 ? 7.357e+06 : _23;
    var _25:Number = _0 == 0 ? 0 : _1 == 0 ? -249.121 : _2 == 0 ? 0 : _3 == 0 ? 6922.34 : 0;
    var _26:Number = 0 - _24;
    var _27:Number = _0 == 0 ? 0 : _1 == 0 ? -6.357e+06 : _2 == 0 ? 0 : _3 == 0 ? 8.357e+06 : 0;
    var _28:Number = 0 - _27;
    var _29:Number = Math.sqrt(_26 * _26 + _28 * _28);
    var _30:Number = 4.00457e+14 / (_29 * _29 * _29);
    var _31:Number = _26 * _30;
    var _32:Number = _24 + _25 + _31 * 0.5;
    output[4] = _32 - _17;
    var _33:Number = _0 == 0 ? -6922.34 : _1 == 0 ? -2491.21 : _2 == 0 ? -7377.81 : _23;
    var _34:Number = _28 * _30;
    var _35:Number = _27 + _33 + _34 * 0.5;
    output[5] = _35 - _20;
    d379 = 1;
    d380 = 0;
    d381 = 0;
    d382 = 6e+24;
    d383 = 0;
    d384 = 0;
    d385 = _17;
    d386 = _20;
    d387 = _0 == 0 ? 1 : _1 == 0 ? 1 : _2 == 0 ? 1 : _3 == 0 ? 1 : _4 == 0 ? 1 : _5 == 0 ? 1 : _6 == 0 ? 1 : _7 == 0 ? 1 : 0;
    var _36:Number = Math.sqrt(_21 * _21 + _22 * _22);
    var _37:Number = 4.00457e+14 / (_36 * _36 * _36);
    d388 = _10 + (_21 * _37 + _16) / 2;
    d389 = _18 + (_22 * _37 + _19) / 2;
    d390 = _32;
    d391 = _35;
    d392 = _0 == 0 ? 1 : _1 == 0 ? 1 : _2 == 0 ? 1 : _3 == 0 ? 1 : 0;
    var _38:Number = 0 - _32;
    var _39:Number = 0 - _35;
    var _40:Number = Math.sqrt(_38 * _38 + _39 * _39);
    var _41:Number = 4.00457e+14 / (_40 * _40 * _40);
    d393 = _25 + (_38 * _41 + _31) / 2;
    d394 = _33 + (_39 * _41 + _34) / 2;
    var _42:Number = _17 - _32;
    var _43:Number = _20 - _35;
    var _44:Number = Math.sqrt(_42 * _42 + _43 * _43);
    var _45:Number = _44 - 1000;
    d395 = _45 < 0 ? 1 : 0;
    d396 = _45 < 0 ? _44 : 0;
    d397 = 50000;
    d398 = 1000;
    d399 = 2000;
    d400 = 29;
  }

  public override function vm_step(output:Array, DVx:Number, DVy:Number):void {
    var _46:Number = d380 - d385;
    var _47:Number = 6.67428e-11 * d382;
    var _48:Number = d381 - d386;
    var _49:Number = Math.sqrt(_46 * _46 + _48 * _48);
    var _50:Number = _47 / (_49 * _49 * _49);
    var _51:Number = _46 * _50;
    var _52:Number = d385 + d388 + (DVx + _51) * 0.5;
    var _53:Number = _52 - d380;
    var _54:Number = _48 * _50;
    var _55:Number = d386 + d389 + (DVy + _54) * 0.5;
    var _56:Number = _55 - d381;
    var _57:Number = Math.sqrt(DVx * DVx + DVy * DVy);
    var _58:Number = d397 - _57;
    var _59:Number = d380 - d390;
    var _60:Number = d381 - d391;
    var _61:Number = Math.sqrt(_59 * _59 + _60 * _60);
    var _62:Number = _47 / (_61 * _61 * _61);
    var _63:Number = _59 * _62;
    var _64:Number = d390 + d393 + _63 * 0.5;
    var _65:Number = _52 - _64;
    var _66:Number = _60 * _62;
    var _67:Number = d391 + d394 + _66 * 0.5;
    var _68:Number = _55 - _67;
    var _69:Number = Math.sqrt(_65 * _65 + _68 * _68);
    var _70:Number = _69 - 1000;
    output[0] = Math.sqrt(_53 * _53 + _56 * _56) - 6.357e+06 < 0 ? -1 : 50000 - _57 < 0 ? -1 : _58 < 0 ? -1 : 900 - (_70 < 0 ? _57 == 0 ? d395 + 1 : 0 : 0) < 0 ? (d400 + _58 / 50000 * 45 + 25) * 2 : 0;
    output[1] = _58;
    var _71:Number = d380 - _52;
    output[2] = _71;
    var _72:Number = d381 - _55;
    output[3] = _72;
    output[4] = _64 - _52;
    output[5] = _67 - _55;
    d379 = d379 + 1;
    d380 = d380;
    d381 = d381;
    d382 = d382;
    d383 = d383;
    d384 = d384;
    d385 = _52;
    d386 = _55;
    d387 = d387;
    var _73:Number = Math.sqrt(_71 * _71 + _72 * _72);
    var _74:Number = _47 / (_73 * _73 * _73);
    d388 = d388 + DVx + (_71 * _74 + _51) / 2;
    d389 = d389 + DVy + (_72 * _74 + _54) / 2;
    d390 = _64;
    d391 = _67;
    d392 = d392;
    var _75:Number = d380 - _64;
    var _76:Number = d381 - _67;
    var _77:Number = Math.sqrt(_75 * _75 + _76 * _76);
    var _78:Number = _47 / (_77 * _77 * _77);
    d393 = d393 + (_75 * _78 + _63) / 2;
    d394 = d394 + (_76 * _78 + _66) / 2;
    d395 = _70 < 0 ? _57 == 0 ? d395 + 1 : 0 : 0;
    d396 = _70 < 0 ? _57 == 0 ? d396 + _69 : 0 : 0;
    d397 = _58;
    var _79:Number = d398 - 1;
    d398 = _79 == 0 ? d399 : _79;
    d399 = _79 == 0 ? d399 * 2 : d399;
    d400 = _79 == 0 ? d400 - 1 : d400;
  }
}

class vm_state_bin3 extends vm_state {
  private var d410:Number, d389:Number, d408:Number, d409:Number, d406:Number, d401:Number, d391:Number,
         d400:Number, d390:Number, d392:Number, d404:Number, d396:Number, d395:Number, d399:Number, d403:Number,
         d398:Number, d402:Number, d397:Number, d394:Number, d393:Number, d405:Number, d407:Number;

  public override function vm_init(output:Array, scenario:Number, DVx:Number, DVy:Number):void {
    var _0:Number = scenario - 2001;
    var _1:Number = scenario - 2002;
    var _2:Number = scenario - 2003;
    var _3:Number = scenario - 2004;
    var _4:Number = scenario - 3001;
    var _5:Number = scenario - 3002;
    var _6:Number = scenario - 3003;
    var _7:Number = scenario - 3004;
    var _8:Number = _7 == 0 ? 0 : 0;
    var _9:Number = _0 == 0 ? 6.557e+06 : _1 == 0 ? 6.357e+06 : _2 == 0 ? 8.357e+06 : _3 == 0 ? 0 : _4 == 0 ? 6.557e+06 : _5 == 0 ? 6.357e+06 : _6 == 0 ? 8.357e+06 : _8;
    var _10:Number = _0 == 0 ? 0 : _1 == 0 ? -4719.32 : _2 == 0 ? 0 : _3 == 0 ? 7875.22 : _4 == 0 ? 0 : _5 == 0 ? -4719.32 : _6 == 0 ? 0 : _7 == 0 ? 7875.22 : 0;
    var _11:Number = 0 - _9;
    var _12:Number = _0 == 0 ? 0 : _1 == 0 ? -6.357e+06 : _2 == 0 ? 0 : _3 == 0 ? 6.457e+06 : _4 == 0 ? 0 : _5 == 0 ? -6.357e+06 : _6 == 0 ? 0 : _7 == 0 ? 6.457e+06 : 0;
    var _13:Number = 0 - _12;
    var _14:Number = Math.sqrt(_11 * _11 + _13 * _13);
    var _15:Number = 4.00457e+14 / (_14 * _14 * _14);
    var _16:Number = _11 * _15;
    var _17:Number = _9 + _10 + _16 * 0.5;
    var _18:Number = _0 == 0 ? -7814.93 : _1 == 0 ? -4719.32 : _2 == 0 ? -6922.34 : _3 == 0 ? 0 : _4 == 0 ? -7814.93 : _5 == 0 ? -4719.32 : _6 == 0 ? -6922.34 : _8;
    var _19:Number = _13 * _15;
    var _20:Number = _12 + _18 + _19 * 0.5;
    output[0] = Math.sqrt(_17 * _17 + _20 * _20) - 6.357e+06 < 0 ? -1 : 0;
    output[1] = 50000;
    var _21:Number = 0 - _17;
    output[2] = _21;
    var _22:Number = 0 - _20;
    output[3] = _22;
    var _23:Number = scenario - 3001;
    var _24:Number = scenario - 3002;
    var _25:Number = scenario - 3003;
    var _26:Number = scenario - 3004;
    var _27:Number = _26 == 0 ? 0 : 0;
    var _28:Number = _23 == 0 ? 8.357e+06 : _24 == 0 ? 6.357e+07 : _25 == 0 ? 7.357e+06 : _27;
    var _29:Number = _23 == 0 ? 0 : _24 == 0 ? -224.209 : _25 == 0 ? 0 : _26 == 0 ? 7614.57 : 0;
    var _30:Number = 0 - _28;
    var _31:Number = _23 == 0 ? 0 : _24 == 0 ? -6.357e+06 : _25 == 0 ? 0 : _26 == 0 ? 8.357e+06 : 0;
    var _32:Number = 0 - _31;
    var _33:Number = Math.sqrt(_30 * _30 + _32 * _32);
    var _34:Number = 4.00457e+14 / (_33 * _33 * _33);
    var _35:Number = _30 * _34;
    var _36:Number = _28 + _29 + _35 * 0.5;
    output[4] = _36 - _17;
    var _37:Number = _23 == 0 ? -7614.57 : _24 == 0 ? -2242.09 : _25 == 0 ? -10328.9 : _27;
    var _38:Number = _32 * _34;
    var _39:Number = _31 + _37 + _38 * 0.5;
    output[5] = _39 - _20;
    d389 = 1;
    d390 = 0;
    d391 = 0;
    d392 = 6e+24;
    d393 = 0;
    d394 = 0;
    d395 = _17;
    d396 = _20;
    d397 = _0 == 0 ? 1 : _1 == 0 ? 1 : _2 == 0 ? 1 : _3 == 0 ? 1 : _4 == 0 ? 1 : _5 == 0 ? 1 : _6 == 0 ? 1 : _7 == 0 ? 1 : 0;
    var _40:Number = Math.sqrt(_21 * _21 + _22 * _22);
    var _41:Number = 4.00457e+14 / (_40 * _40 * _40);
    d398 = _10 + (_21 * _41 + _16) / 2;
    d399 = _18 + (_22 * _41 + _19) / 2;
    d400 = _36;
    d401 = _39;
    d402 = _23 == 0 ? 1 : _24 == 0 ? 1 : _25 == 0 ? 1 : _26 == 0 ? 1 : 0;
    var _42:Number = 0 - _36;
    var _43:Number = 0 - _39;
    var _44:Number = Math.sqrt(_42 * _42 + _43 * _43);
    var _45:Number = 4.00457e+14 / (_44 * _44 * _44);
    d403 = _29 + (_42 * _45 + _35) / 2;
    d404 = _37 + (_43 * _45 + _38) / 2;
    var _46:Number = _17 - _36;
    var _47:Number = _20 - _39;
    var _48:Number = Math.sqrt(_46 * _46 + _47 * _47);
    var _49:Number = _48 - 1000;
    d405 = _49 < 0 ? 1 : 0;
    d406 = _49 < 0 ? _48 : 0;
    d407 = 50000;
    d408 = 1000;
    d409 = 2000;
    d410 = 29;
  }

  public override function vm_step(output:Array, DVx:Number, DVy:Number):void {
    var _50:Number = d390 - d395;
    var _51:Number = 6.67428e-11 * d392;
    var _52:Number = d391 - d396;
    var _53:Number = Math.sqrt(_50 * _50 + _52 * _52);
    var _54:Number = _51 / (_53 * _53 * _53);
    var _55:Number = _50 * _54;
    var _56:Number = d395 + d398 + (DVx + _55) * 0.5;
    var _57:Number = _56 - d390;
    var _58:Number = _52 * _54;
    var _59:Number = d396 + d399 + (DVy + _58) * 0.5;
    var _60:Number = _59 - d391;
    var _61:Number = Math.sqrt(DVx * DVx + DVy * DVy);
    var _62:Number = d407 - _61;
    var _63:Number = d390 - d400;
    var _64:Number = d391 - d401;
    var _65:Number = Math.sqrt(_63 * _63 + _64 * _64);
    var _66:Number = _51 / (_65 * _65 * _65);
    var _67:Number = _63 * _66;
    var _68:Number = d400 + d403 + _67 * 0.5;
    var _69:Number = _56 - _68;
    var _70:Number = _64 * _66;
    var _71:Number = d401 + d404 + _70 * 0.5;
    var _72:Number = _59 - _71;
    var _73:Number = Math.sqrt(_69 * _69 + _72 * _72);
    var _74:Number = _73 - 1000;
    output[0] = Math.sqrt(_57 * _57 + _60 * _60) - 6.357e+06 < 0 ? -1 : 50000 - _61 < 0 ? -1 : _62 < 0 ? -1 : 900 - (_74 < 0 ? _61 == 0 ? d405 + 1 : 0 : 0) < 0 ? (d410 + _62 / 50000 * 45 + 25) * 4 : 0;
    output[1] = _62;
    var _75:Number = d390 - _56;
    output[2] = _75;
    var _76:Number = d391 - _59;
    output[3] = _76;
    output[4] = _68 - _56;
    output[5] = _71 - _59;
    d389 = d389 + 1;
    d390 = d390;
    d391 = d391;
    d392 = d392;
    d393 = d393;
    d394 = d394;
    d395 = _56;
    d396 = _59;
    d397 = d397;
    var _77:Number = Math.sqrt(_75 * _75 + _76 * _76);
    var _78:Number = _51 / (_77 * _77 * _77);
    d398 = d398 + DVx + (_75 * _78 + _55) / 2;
    d399 = d399 + DVy + (_76 * _78 + _58) / 2;
    d400 = _68;
    d401 = _71;
    d402 = d402;
    var _79:Number = d390 - _68;
    var _80:Number = d391 - _71;
    var _81:Number = Math.sqrt(_79 * _79 + _80 * _80);
    var _82:Number = _51 / (_81 * _81 * _81);
    d403 = d403 + (_79 * _82 + _67) / 2;
    d404 = d404 + (_80 * _82 + _70) / 2;
    d405 = _74 < 0 ? _61 == 0 ? d405 + 1 : 0 : 0;
    d406 = _74 < 0 ? _61 == 0 ? d406 + _73 : 0 : 0;
    d407 = _62;
    var _83:Number = d408 - 1;
    d408 = _83 == 0 ? d409 : _83;
    d409 = _83 == 0 ? d409 * 2 : d409;
    d410 = _83 == 0 ? d410 - 1 : d410;
  }
}

class vm_state_bin4 extends vm_state {
  private var d2111:Number, d2039:Number, d2051:Number, d2110:Number, d2050:Number, d2052:Number, d2041:Number,
         d2040:Number, d2042:Number, d2114:Number, d2113:Number, d2112:Number, d2106:Number, d2105:Number, d2109:Number,
         d2108:Number, d2107:Number, d2101:Number, d2100:Number, d2104:Number, d2103:Number, d2102:Number, d2096:Number,
         d2095:Number, d2099:Number, d2098:Number, d2097:Number, d2091:Number, d2090:Number, d2094:Number, d2093:Number,
         d2092:Number, d2086:Number, d2085:Number, d2089:Number, d2088:Number, d2087:Number, d2081:Number, d2080:Number,
         d2084:Number, d2083:Number, d2082:Number, d2076:Number, d2075:Number, d2079:Number, d2078:Number, d2077:Number,
         d2071:Number, d2070:Number, d2074:Number, d2073:Number, d2072:Number, d2066:Number, d2065:Number, d2069:Number,
         d2068:Number, d2067:Number, d2061:Number, d2060:Number, d2064:Number, d2063:Number, d2062:Number, d2056:Number,
         d2055:Number, d2059:Number, d2058:Number, d2057:Number, d2054:Number, d2053:Number, d2046:Number, d2045:Number,
         d2049:Number, d2048:Number, d2047:Number, d2044:Number, d2043:Number, d2127:Number, d2126:Number, d2125:Number,
         d2124:Number, d2123:Number, d2122:Number, d2121:Number, d2120:Number, d2119:Number, d2118:Number, d2117:Number,
         d2116:Number, d2128:Number, d2115:Number;

  public override function vm_init(output:Array, scenario:Number, DVx:Number, DVy:Number):void {
    var _0:Number = scenario - 4001;
    var _1:Number = scenario - 4002;
    var _2:Number = scenario - 4003;
    var _3:Number = scenario - 4004;
    var _4:Number = _3 == 0 ? 0 : 0;
    var _5:Number = _0 == 0 ? 6.557e+06 : _1 == 0 ? 6.357e+06 : _2 == 0 ? 8.357e+06 : _4;
    var _6:Number = _0 == 0 ? 0 : _1 == 0 ? -4719.32 : _2 == 0 ? 0 : _3 == 0 ? -7875.22 : 0;
    var _7:Number = 0 - _5;
    var _8:Number = _0 == 0 ? 0 : _1 == 0 ? -6.357e+06 : _2 == 0 ? 0 : _3 == 0 ? 6.457e+06 : 0;
    var _9:Number = 0 - _8;
    var _10:Number = Math.sqrt(_7 * _7 + _9 * _9);
    var _11:Number = 4.00457e+14 / (_10 * _10 * _10);
    var _12:Number = 0 - _5;
    var _13:Number = 3.84399e+08 - _8;
    var _14:Number = Math.sqrt(_12 * _12 + _13 * _13);
    var _15:Number = 4.90359e+12 / (_14 * _14 * _14);
    var _16:Number = _7 * _11 + _12 * _15;
    var _17:Number = _5 + _6 + _16 * 0.5;
    var _18:Number = _0 == 0 ? -7814.93 : _1 == 0 ? -4719.32 : _2 == 0 ? -6922.34 : _4;
    var _19:Number = _9 * _11 + _13 * _15;
    var _20:Number = _8 + _18 + _19 * 0.5;
    var _21:Number = _20 - 3.84399e+08;
    output[0] = Math.sqrt(_17 * _17 + _20 * _20) - 6.357e+06 < 0 ? -1 : Math.sqrt(_17 * _17 + _21 * _21) - 1.738e+06 < 0 ? -1 : 0;
    output[1] = 10000;
    var _22:Number = 0 - _17;
    output[2] = _22;
    var _23:Number = 0 - _20;
    output[3] = _23;
    output[4] = 6.657e+06 - _17;
    output[5] = -7756.01 - _20;
    output[6] = 75000;
    var _24:Number = _0 == 0 ? 1.58976e+07 : _1 == 0 ? 6.32317e+07 : _2 == 0 ? 1.37135e+06 : _3 == 0 ? -8.2785e+06 : 0;
    var _25:Number = _0 == 0 ? 2358.68 : _1 == 0 ? 331.497 : _2 == 0 ? 5672.96 : _3 == 0 ? 4259.1 : 0;
    var _26:Number = 0 - _24;
    var _27:Number = _0 == 0 ? 9.1785e+06 : _1 == 0 ? 1.76194e+07 : _2 == 0 ? 1.23388e+07 : _3 == 0 ? 1.43388e+07 : 0;
    var _28:Number = 0 - _27;
    var _29:Number = Math.sqrt(_26 * _26 + _28 * _28);
    var _30:Number = 4.00457e+14 / (_29 * _29 * _29);
    var _31:Number = 0 - _24;
    var _32:Number = 3.84399e+08 - _27;
    var _33:Number = Math.sqrt(_31 * _31 + _32 * _32);
    var _34:Number = 4.90359e+12 / (_33 * _33 * _33);
    var _35:Number = _26 * _30 + _31 * _34;
    var _36:Number = _24 + _25 + _35 * 0.5;
    output[7] = _36 - _17;
    var _37:Number = _0 == 0 ? -4085.35 : _1 == 0 ? -1189.66 : _2 == 0 ? -630.501 : _3 == 0 ? 2458.99 : 0;
    var _38:Number = _28 * _30 + _32 * _34;
    var _39:Number = _27 + _37 + _38 * 0.5;
    output[8] = _39 - _20;
    var _40:Number = _17 - _36;
    var _41:Number = _20 - _39;
    var _42:Number = Math.sqrt(_40 * _40 + _41 * _41) - 1000 < 0 ? 2e+06 : 0;
    output[9] = _42 == 0 ? 0 : 1;
    var _43:Number = _0 == 0 ? 1.41785e+07 : _1 == 0 ? 5.46108e+07 : _2 == 0 ? -1.3642e+07 : _3 == 0 ? -2.2999e+07 : 0;
    var _44:Number = _0 == 0 ? 3319.54 : _1 == 0 ? 733.926 : _2 == 0 ? 3363.58 : _3 == 0 ? 1941.59 : 0;
    var _45:Number = 0 - _43;
    var _46:Number = _0 == 0 ? 2.45579e+07 : _1 == 0 ? 4.18747e+07 : _2 == 0 ? 1.63713e+07 : _3 == 0 ? 1.32785e+07 : 0;
    var _47:Number = 0 - _46;
    var _48:Number = Math.sqrt(_45 * _45 + _47 * _47);
    var _49:Number = 4.00457e+14 / (_48 * _48 * _48);
    var _50:Number = 0 - _43;
    var _51:Number = 3.84399e+08 - _46;
    var _52:Number = Math.sqrt(_50 * _50 + _51 * _51);
    var _53:Number = 4.90359e+12 / (_52 * _52 * _52);
    var _54:Number = _45 * _49 + _50 * _53;
    var _55:Number = _43 + _44 + _54 * 0.5;
    output[10] = _55 - _17;
    var _56:Number = _0 == 0 ? -1916.54 : _1 == 0 ? -957.148 : _2 == 0 ? 2802.82 : _3 == 0 ? 3362.94 : 0;
    var _57:Number = _47 * _49 + _51 * _53;
    var _58:Number = _46 + _56 + _57 * 0.5;
    output[11] = _58 - _20;
    var _59:Number = _17 - _55;
    var _60:Number = _20 - _58;
    var _61:Number = Math.sqrt(_59 * _59 + _60 * _60) - 1000 < 0 ? 2e+06 : 0;
    output[12] = _61 == 0 ? 0 : 1;
    var _62:Number = _0 == 0 ? 2.34861e-09 : _1 == 0 ? 3.6357e+07 : _2 == 0 ? -3e+07 : _3 == 0 ? -3.6557e+07 : 0;
    var _63:Number = _0 == 0 ? 3328.07 : _1 == 0 ? 1014.95 : _2 == 0 ? 870.443 : _3 == 0 ? 2.02656e-13 : 0;
    var _64:Number = 0 - _62;
    var _65:Number = _0 == 0 ? 3.8357e+07 : _1 == 0 ? 6.357e+07 : _2 == 0 ? 7.357e+06 : _3 == 0 ? 4.47679e-09 : 0;
    var _66:Number = 0 - _65;
    var _67:Number = Math.sqrt(_64 * _64 + _66 * _66);
    var _68:Number = 4.00457e+14 / (_67 * _67 * _67);
    var _69:Number = 0 - _62;
    var _70:Number = 3.84399e+08 - _65;
    var _71:Number = Math.sqrt(_69 * _69 + _70 * _70);
    var _72:Number = 4.90359e+12 / (_71 * _71 * _71);
    var _73:Number = _64 * _68 + _69 * _72;
    var _74:Number = _62 + _63 + _73 * 0.5;
    output[13] = _74 - _17;
    var _75:Number = _0 == 0 ? 0 : _1 == 0 ? -580.472 : _2 == 0 ? 3549.45 : _3 == 0 ? 3309.73 : 0;
    var _76:Number = _66 * _68 + _70 * _72;
    var _77:Number = _65 + _75 + _76 * 0.5;
    output[14] = _77 - _20;
    var _78:Number = _17 - _74;
    var _79:Number = _20 - _77;
    var _80:Number = Math.sqrt(_78 * _78 + _79 * _79) - 1000 < 0 ? 2e+06 : 0;
    output[15] = _80 == 0 ? 0 : 1;
    var _81:Number = _0 == 0 ? -2.41785e+07 : _1 == 0 ? 8.36134e+06 : _2 == 0 ? -3.83195e+07 : _3 == 0 ? -4.03195e+07 : 0;
    var _82:Number = _0 == 0 ? 2591.86 : _1 == 0 ? 1121.65 : _2 == 0 ? -1072.52 : _3 == 0 ? -1466.41 : 0;
    var _83:Number = 0 - _81;
    var _84:Number = _0 == 0 ? 4.18784e+07 : _1 == 0 ? 7.82317e+07 : _2 == 0 ? -1.36287e+07 : _3 == 0 ? -2.32785e+07 : 0;
    var _85:Number = 0 - _84;
    var _86:Number = Math.sqrt(_83 * _83 + _85 * _85);
    var _87:Number = 4.00457e+14 / (_86 * _86 * _86);
    var _88:Number = 0 - _81;
    var _89:Number = 3.84399e+08 - _84;
    var _90:Number = Math.sqrt(_88 * _88 + _89 * _89);
    var _91:Number = 4.90359e+12 / (_90 * _90 * _90);
    var _92:Number = _83 * _87 + _88 * _91;
    var _93:Number = _81 + _82 + _92 * 0.5;
    output[16] = _93 - _17;
    var _94:Number = _0 == 0 ? 1496.41 : _1 == 0 ? -119.881 : _2 == 0 ? 3015.59 : _3 == 0 ? 2539.9 : 0;
    var _95:Number = _85 * _87 + _89 * _91;
    var _96:Number = _84 + _94 + _95 * 0.5;
    output[17] = _96 - _20;
    var _97:Number = _17 - _93;
    var _98:Number = _20 - _96;
    var _99:Number = Math.sqrt(_97 * _97 + _98 * _98) - 1000 < 0 ? 2e+06 : 0;
    output[18] = _99 == 0 ? 0 : 1;
    var _100:Number = _0 == 0 ? -5.05386e+07 : _1 == 0 ? -2.68747e+07 : _2 == 0 ? -3.13713e+07 : _3 == 0 ? -2.82785e+07 : 0;
    var _101:Number = _0 == 0 ? 1375.28 : _1 == 0 ? 1029.81 : _2 == 0 ? -2262.12 : _3 == 0 ? -2304.44 : 0;
    var _102:Number = 0 - _100;
    var _103:Number = _0 == 0 ? 2.91785e+07 : _1 == 0 ? 8.05916e+07 : _2 == 0 ? -3.96228e+07 : _3 == 0 ? -4.89798e+07 : 0;
    var _104:Number = 0 - _103;
    var _105:Number = Math.sqrt(_102 * _102 + _104 * _104);
    var _106:Number = 4.00457e+14 / (_105 * _105 * _105);
    var _107:Number = 0 - _100;
    var _108:Number = 3.84399e+08 - _103;
    var _109:Number = Math.sqrt(_107 * _107 + _108 * _108);
    var _110:Number = 4.90359e+12 / (_109 * _109 * _109);
    var _111:Number = _102 * _106 + _107 * _110;
    var _112:Number = _100 + _101 + _111 * 0.5;
    output[19] = _112 - _17;
    var _113:Number = _0 == 0 ? 2382.05 : _1 == 0 ? 343.41 : _2 == 0 ? 1791.03 : _3 == 0 ? 1330.47 : 0;
    var _114:Number = _104 * _106 + _108 * _110;
    var _115:Number = _103 + _113 + _114 * 0.5;
    output[20] = _115 - _20;
    var _116:Number = _17 - _112;
    var _117:Number = _20 - _115;
    var _118:Number = Math.sqrt(_116 * _116 + _117 * _117) - 1000 < 0 ? 2e+06 : 0;
    output[21] = _118 == 0 ? 0 : 1;
    var _119:Number = _0 == 0 ? -6.8357e+07 : _1 == 0 ? -6.357e+07 : _2 == 0 ? -7.357e+06 : _3 == 0 ? -1.22259e-08 : 0;
    var _120:Number = _0 == 0 ? 1.57094e-13 : _1 == 0 ? 753.717 : _2 == 0 ? -2631.35 : _3 == 0 ? -2452.91 : 0;
    var _121:Number = 0 - _119;
    var _122:Number = _0 == 0 ? 8.37104e-09 : _1 == 0 ? 6.6357e+07 : _2 == 0 ? -6e+07 : _3 == 0 ? -6.6557e+07 : 0;
    var _123:Number = 0 - _122;
    var _124:Number = Math.sqrt(_121 * _121 + _123 * _123);
    var _125:Number = 4.00457e+14 / (_124 * _124 * _124);
    var _126:Number = 0 - _119;
    var _127:Number = 3.84399e+08 - _122;
    var _128:Number = Math.sqrt(_126 * _126 + _127 * _127);
    var _129:Number = 4.90359e+12 / (_128 * _128 * _128);
    var _130:Number = _121 * _125 + _126 * _129;
    var _131:Number = _119 + _120 + _130 * 0.5;
    output[22] = _131 - _17;
    var _132:Number = _0 == 0 ? 2565.62 : _1 == 0 ? 722.061 : _2 == 0 ? 322.647 : _3 == 0 ? 3.00384e-13 : 0;
    var _133:Number = _123 * _125 + _127 * _129;
    var _134:Number = _122 + _132 + _133 * 0.5;
    output[23] = _134 - _20;
    var _135:Number = _17 - _131;
    var _136:Number = _20 - _134;
    var _137:Number = Math.sqrt(_135 * _135 + _136 * _136) - 1000 < 0 ? 2e+06 : 0;
    output[24] = _137 == 0 ? 0 : 1;
    var _138:Number = _0 == 0 ? -6.78592e+07 : _1 == 0 ? -9.32317e+07 : _2 == 0 ? 2.86287e+07 : _3 == 0 ? 3.82785e+07 : 0;
    var _139:Number = _0 == 0 ? -1209.46 : _1 == 0 ? 346.965 : _2 == 0 ? -2255.31 : _3 == 0 ? -1980.69 : 0;
    var _140:Number = 0 - _138;
    var _141:Number = _0 == 0 ? -3.91785e+07 : _1 == 0 ? 3.43421e+07 : _2 == 0 ? -6.43003e+07 : _3 == 0 ? -6.63003e+07 : 0;
    var _142:Number = 0 - _141;
    var _143:Number = Math.sqrt(_140 * _140 + _142 * _142);
    var _144:Number = 4.00457e+14 / (_143 * _143 * _143);
    var _145:Number = 0 - _138;
    var _146:Number = 3.84399e+08 - _141;
    var _147:Number = Math.sqrt(_145 * _145 + _146 * _146);
    var _148:Number = 4.90359e+12 / (_147 * _147 * _147);
    var _149:Number = _140 * _144 + _145 * _148;
    var _150:Number = _138 + _139 + _149 * 0.5;
    output[25] = _150 - _17;
    var _151:Number = _0 == 0 ? 2094.85 : _1 == 0 ? 941.94 : _2 == 0 ? -1004.14 : _3 == 0 ? -1143.55 : 0;
    var _152:Number = _142 * _144 + _146 * _148;
    var _153:Number = _141 + _151 + _152 * 0.5;
    output[26] = _153 - _20;
    var _154:Number = _17 - _150;
    var _155:Number = _20 - _153;
    var _156:Number = Math.sqrt(_154 * _154 + _155 * _155) - 1000 < 0 ? 2e+06 : 0;
    output[27] = _156 == 0 ? 0 : 1;
    var _157:Number = _0 == 0 ? -4.41785e+07 : _1 == 0 ? -1.06572e+08 : _2 == 0 ? 6.56035e+07 : _3 == 0 ? 7.49606e+07 : 0;
    var _158:Number = _0 == 0 ? -1991.19 : _1 == 0 ? -107.001 : _2 == 0 ? -1340.24 : _3 == 0 ? -1075.47 : 0;
    var _159:Number = 0 - _157;
    var _160:Number = _0 == 0 ? -7.65194e+07 : _1 == 0 ? -1.18747e+07 : _2 == 0 ? -4.63713e+07 : _3 == 0 ? -4.32785e+07 : 0;
    var _161:Number = 0 - _160;
    var _162:Number = Math.sqrt(_159 * _159 + _161 * _161);
    var _163:Number = 4.00457e+14 / (_162 * _162 * _162);
    var _164:Number = 0 - _157;
    var _165:Number = 3.84399e+08 - _160;
    var _166:Number = Math.sqrt(_164 * _164 + _165 * _165);
    var _167:Number = 4.90359e+12 / (_166 * _166 * _166);
    var _168:Number = _159 * _163 + _164 * _167;
    var _169:Number = _157 + _158 + _168 * 0.5;
    output[28] = _169 - _17;
    var _170:Number = _0 == 0 ? 1149.61 : _1 == 0 ? 960.299 : _2 == 0 ? -1896.1 : _3 == 0 ? -1862.76 : 0;
    var _171:Number = _161 * _163 + _165 * _167;
    var _172:Number = _160 + _170 + _171 * 0.5;
    output[29] = _172 - _20;
    var _173:Number = _17 - _169;
    var _174:Number = _20 - _172;
    var _175:Number = Math.sqrt(_173 * _173 + _174 * _174) - 1000 < 0 ? 2e+06 : 0;
    output[30] = _175 == 0 ? 0 : 1;
    var _176:Number = _0 == 0 ? -1.80673e-08 : _1 == 0 ? -9.6357e+07 : _2 == 0 ? 9e+07 : _3 == 0 ? 9.6557e+07 : 0;
    var _177:Number = _0 == 0 ? -2199.39 : _1 == 0 ? -512.837 : _2 == 0 ? -179.292 : _3 == 0 ? -3.74088e-13 : 0;
    var _178:Number = 0 - _176;
    var _179:Number = _0 == 0 ? -9.8357e+07 : _1 == 0 ? -6.357e+07 : _2 == 0 ? -7.357e+06 : _3 == 0 ? -2.36489e-08 : 0;
    var _180:Number = 0 - _179;
    var _181:Number = Math.sqrt(_178 * _178 + _180 * _180);
    var _182:Number = 4.00457e+14 / (_181 * _181 * _181);
    var _183:Number = 0 - _176;
    var _184:Number = 3.84399e+08 - _179;
    var _185:Number = Math.sqrt(_183 * _183 + _184 * _184);
    var _186:Number = 4.90359e+12 / (_185 * _185 * _185);
    var _187:Number = _178 * _182 + _183 * _186;
    var _188:Number = _176 + _177 + _187 * 0.5;
    output[31] = _188 - _17;
    var _189:Number = _0 == 0 ? 2.69338e-13 : _1 == 0 ? 777.34 : _2 == 0 ? -2193.33 : _3 == 0 ? -2036.51 : 0;
    var _190:Number = _180 * _182 + _184 * _186;
    var _191:Number = _179 + _189 + _190 * 0.5;
    output[32] = _191 - _20;
    var _192:Number = _17 - _188;
    var _193:Number = _20 - _191;
    var _194:Number = Math.sqrt(_192 * _192 + _193 * _193) - 1000 < 0 ? 2e+06 : 0;
    output[33] = _194 == 0 ? 0 : 1;
    var _195:Number = _0 == 0 ? 5.41785e+07 : _1 == 0 ? -6.03229e+07 : _2 == 0 ? 9.0281e+07 : _3 == 0 ? 9.22811e+07 : 0;
    var _196:Number = _0 == 0 ? -1831.36 : _1 == 0 ? -785.161 : _2 == 0 ? 913.021 : _3 == 0 ? 969.297 : 0;
    var _197:Number = 0 - _195;
    var _198:Number = _0 == 0 ? -9.38399e+07 : _1 == 0 ? -1.08232e+08 : _2 == 0 ? 4.36287e+07 : _3 == 0 ? 5.32785e+07 : 0;
    var _199:Number = 0 - _198;
    var _200:Number = Math.sqrt(_197 * _197 + _199 * _199);
    var _201:Number = 4.00457e+14 / (_200 * _200 * _200);
    var _202:Number = 0 - _195;
    var _203:Number = 3.84399e+08 - _198;
    var _204:Number = Math.sqrt(_202 * _202 + _203 * _203);
    var _205:Number = 4.90359e+12 / (_204 * _204 * _204);
    var _206:Number = _197 * _201 + _202 * _205;
    var _207:Number = _195 + _196 + _206 * 0.5;
    output[34] = _207 - _17;
    var _208:Number = _0 == 0 ? -1057.33 : _1 == 0 ? 437.609 : _2 == 0 ? -1889.32 : _3 == 0 ? -1678.87 : 0;
    var _209:Number = _199 * _201 + _203 * _205;
    var _210:Number = _198 + _208 + _209 * 0.5;
    output[35] = _210 - _20;
    var _211:Number = _17 - _207;
    var _212:Number = _20 - _210;
    var _213:Number = Math.sqrt(_211 * _211 + _212 * _212) - 1000 < 0 ? 2e+06 : 0;
    output[36] = _213 == 0 ? 0 : 1;
    output[37] = 2611.34 - _17;
    output[38] = 3.86337e+08 - _20;
    var _214:Number = _17 - 2611.34;
    var _215:Number = _20 - 3.86337e+08;
    var _216:Number = Math.sqrt(_214 * _214 + _215 * _215) - 1000 < 0 ? 2e+06 : 0;
    output[39] = _216 == 0 ? 0 : 1;
    output[100] = 1020.67 - _17;
    output[101] = 3.84399e+08 - _20;
    d2039 = 1;
    d2040 = 0;
    d2041 = 0;
    d2042 = 6e+24;
    d2043 = 0;
    d2044 = 0;
    d2045 = _17;
    d2046 = _20;
    d2047 = _0 == 0 ? 1 : _1 == 0 ? 1 : _2 == 0 ? 1 : _3 == 0 ? 1 : 0;
    var _217:Number = Math.sqrt(_22 * _22 + _23 * _23);
    var _218:Number = 4.00457e+14 / (_217 * _217 * _217);
    var _219:Number = 0 - _17;
    var _220:Number = 3.84399e+08 - _20;
    var _221:Number = Math.sqrt(_219 * _219 + _220 * _220);
    var _222:Number = 4.90359e+12 / (_221 * _221 * _221);
    d2048 = _6 + (_22 * _218 + _219 * _222 + _16) / 2;
    d2049 = _18 + (_23 * _218 + _220 * _222 + _19) / 2;
    d2050 = 1020.67;
    d2051 = 3.84399e+08;
    d2052 = 7.347e+22;
    d2053 = 1020.67;
    d2054 = -0.00271014;
    d2055 = 6.657e+06;
    d2056 = -7756.01;
    d2057 = 1;
    d2058 = -9.03646;
    d2059 = -7756.01;
    d2060 = _36;
    d2061 = _39;
    d2062 = _0 == 0 ? 1 : _1 == 0 ? 1 : _2 == 0 ? 1 : _3 == 0 ? 1 : 0;
    var _223:Number = 0 - _36;
    var _224:Number = 0 - _39;
    var _225:Number = Math.sqrt(_223 * _223 + _224 * _224);
    var _226:Number = 4.00457e+14 / (_225 * _225 * _225);
    var _227:Number = 0 - _36;
    var _228:Number = 3.84399e+08 - _39;
    var _229:Number = Math.sqrt(_227 * _227 + _228 * _228);
    var _230:Number = 4.90359e+12 / (_229 * _229 * _229);
    d2063 = _25 + (_223 * _226 + _227 * _230 + _35) / 2;
    d2064 = _37 + (_224 * _226 + _228 * _230 + _38) / 2;
    d2065 = _55;
    d2066 = _58;
    d2067 = _0 == 0 ? 1 : _1 == 0 ? 1 : _2 == 0 ? 1 : _3 == 0 ? 1 : 0;
    var _231:Number = 0 - _55;
    var _232:Number = 0 - _58;
    var _233:Number = Math.sqrt(_231 * _231 + _232 * _232);
    var _234:Number = 4.00457e+14 / (_233 * _233 * _233);
    var _235:Number = 0 - _55;
    var _236:Number = 3.84399e+08 - _58;
    var _237:Number = Math.sqrt(_235 * _235 + _236 * _236);
    var _238:Number = 4.90359e+12 / (_237 * _237 * _237);
    d2068 = _44 + (_231 * _234 + _235 * _238 + _54) / 2;
    d2069 = _56 + (_232 * _234 + _236 * _238 + _57) / 2;
    d2070 = _74;
    d2071 = _77;
    d2072 = _0 == 0 ? 1 : _1 == 0 ? 1 : _2 == 0 ? 1 : _3 == 0 ? 1 : 0;
    var _239:Number = 0 - _74;
    var _240:Number = 0 - _77;
    var _241:Number = Math.sqrt(_239 * _239 + _240 * _240);
    var _242:Number = 4.00457e+14 / (_241 * _241 * _241);
    var _243:Number = 0 - _74;
    var _244:Number = 3.84399e+08 - _77;
    var _245:Number = Math.sqrt(_243 * _243 + _244 * _244);
    var _246:Number = 4.90359e+12 / (_245 * _245 * _245);
    d2073 = _63 + (_239 * _242 + _243 * _246 + _73) / 2;
    d2074 = _75 + (_240 * _242 + _244 * _246 + _76) / 2;
    d2075 = _93;
    d2076 = _96;
    d2077 = _0 == 0 ? 1 : _1 == 0 ? 1 : _2 == 0 ? 1 : _3 == 0 ? 1 : 0;
    var _247:Number = 0 - _93;
    var _248:Number = 0 - _96;
    var _249:Number = Math.sqrt(_247 * _247 + _248 * _248);
    var _250:Number = 4.00457e+14 / (_249 * _249 * _249);
    var _251:Number = 0 - _93;
    var _252:Number = 3.84399e+08 - _96;
    var _253:Number = Math.sqrt(_251 * _251 + _252 * _252);
    var _254:Number = 4.90359e+12 / (_253 * _253 * _253);
    d2078 = _82 + (_247 * _250 + _251 * _254 + _92) / 2;
    d2079 = _94 + (_248 * _250 + _252 * _254 + _95) / 2;
    d2080 = _112;
    d2081 = _115;
    d2082 = _0 == 0 ? 1 : _1 == 0 ? 1 : _2 == 0 ? 1 : _3 == 0 ? 1 : 0;
    var _255:Number = 0 - _112;
    var _256:Number = 0 - _115;
    var _257:Number = Math.sqrt(_255 * _255 + _256 * _256);
    var _258:Number = 4.00457e+14 / (_257 * _257 * _257);
    var _259:Number = 0 - _112;
    var _260:Number = 3.84399e+08 - _115;
    var _261:Number = Math.sqrt(_259 * _259 + _260 * _260);
    var _262:Number = 4.90359e+12 / (_261 * _261 * _261);
    d2083 = _101 + (_255 * _258 + _259 * _262 + _111) / 2;
    d2084 = _113 + (_256 * _258 + _260 * _262 + _114) / 2;
    d2085 = _131;
    d2086 = _134;
    d2087 = _0 == 0 ? 1 : _1 == 0 ? 1 : _2 == 0 ? 1 : _3 == 0 ? 1 : 0;
    var _263:Number = 0 - _131;
    var _264:Number = 0 - _134;
    var _265:Number = Math.sqrt(_263 * _263 + _264 * _264);
    var _266:Number = 4.00457e+14 / (_265 * _265 * _265);
    var _267:Number = 0 - _131;
    var _268:Number = 3.84399e+08 - _134;
    var _269:Number = Math.sqrt(_267 * _267 + _268 * _268);
    var _270:Number = 4.90359e+12 / (_269 * _269 * _269);
    d2088 = _120 + (_263 * _266 + _267 * _270 + _130) / 2;
    d2089 = _132 + (_264 * _266 + _268 * _270 + _133) / 2;
    d2090 = _150;
    d2091 = _153;
    d2092 = _0 == 0 ? 1 : _1 == 0 ? 1 : _2 == 0 ? 1 : _3 == 0 ? 1 : 0;
    var _271:Number = 0 - _150;
    var _272:Number = 0 - _153;
    var _273:Number = Math.sqrt(_271 * _271 + _272 * _272);
    var _274:Number = 4.00457e+14 / (_273 * _273 * _273);
    var _275:Number = 0 - _150;
    var _276:Number = 3.84399e+08 - _153;
    var _277:Number = Math.sqrt(_275 * _275 + _276 * _276);
    var _278:Number = 4.90359e+12 / (_277 * _277 * _277);
    d2093 = _139 + (_271 * _274 + _275 * _278 + _149) / 2;
    d2094 = _151 + (_272 * _274 + _276 * _278 + _152) / 2;
    d2095 = _169;
    d2096 = _172;
    d2097 = _0 == 0 ? 1 : _1 == 0 ? 1 : _2 == 0 ? 1 : _3 == 0 ? 1 : 0;
    var _279:Number = 0 - _169;
    var _280:Number = 0 - _172;
    var _281:Number = Math.sqrt(_279 * _279 + _280 * _280);
    var _282:Number = 4.00457e+14 / (_281 * _281 * _281);
    var _283:Number = 0 - _169;
    var _284:Number = 3.84399e+08 - _172;
    var _285:Number = Math.sqrt(_283 * _283 + _284 * _284);
    var _286:Number = 4.90359e+12 / (_285 * _285 * _285);
    d2098 = _158 + (_279 * _282 + _283 * _286 + _168) / 2;
    d2099 = _170 + (_280 * _282 + _284 * _286 + _171) / 2;
    d2100 = _188;
    d2101 = _191;
    d2102 = _0 == 0 ? 1 : _1 == 0 ? 1 : _2 == 0 ? 1 : _3 == 0 ? 1 : 0;
    var _287:Number = 0 - _188;
    var _288:Number = 0 - _191;
    var _289:Number = Math.sqrt(_287 * _287 + _288 * _288);
    var _290:Number = 4.00457e+14 / (_289 * _289 * _289);
    var _291:Number = 0 - _188;
    var _292:Number = 3.84399e+08 - _191;
    var _293:Number = Math.sqrt(_291 * _291 + _292 * _292);
    var _294:Number = 4.90359e+12 / (_293 * _293 * _293);
    d2103 = _177 + (_287 * _290 + _291 * _294 + _187) / 2;
    d2104 = _189 + (_288 * _290 + _292 * _294 + _190) / 2;
    d2105 = _207;
    d2106 = _210;
    d2107 = _0 == 0 ? 1 : _1 == 0 ? 1 : _2 == 0 ? 1 : _3 == 0 ? 1 : 0;
    var _295:Number = 0 - _207;
    var _296:Number = 0 - _210;
    var _297:Number = Math.sqrt(_295 * _295 + _296 * _296);
    var _298:Number = 4.00457e+14 / (_297 * _297 * _297);
    var _299:Number = 0 - _207;
    var _300:Number = 3.84399e+08 - _210;
    var _301:Number = Math.sqrt(_299 * _299 + _300 * _300);
    var _302:Number = 4.90359e+12 / (_301 * _301 * _301);
    d2108 = _196 + (_295 * _298 + _299 * _302 + _206) / 2;
    d2109 = _208 + (_296 * _298 + _300 * _302 + _209) / 2;
    d2110 = 2611.34;
    d2111 = 3.86337e+08;
    d2112 = 1;
    d2113 = 2611.34;
    d2114 = -1.30827;
    d2115 = 10000;
    var _303:Number = _17 - 6.657e+06;
    var _304:Number = _20 - -7756.01;
    var _305:Number = Math.sqrt(_303 * _303 + _304 * _304) - 1000;
    d2116 = _305 < 0 ? 2e+06 : 0;
    d2117 = _42;
    d2118 = _61;
    d2119 = _80;
    d2120 = _99;
    d2121 = _118;
    d2122 = _137;
    d2123 = _156;
    d2124 = _175;
    d2125 = _194;
    d2126 = _213;
    d2127 = _216;
    d2128 = 75000;
  }

  public override function vm_step(output:Array, DVx:Number, DVy:Number):void {
    var _306:Number = d2040 - d2045;
    var _307:Number = 6.67428e-11 * d2042;
    var _308:Number = d2041 - d2046;
    var _309:Number = Math.sqrt(_306 * _306 + _308 * _308);
    var _310:Number = _307 / (_309 * _309 * _309);
    var _311:Number = d2050 - d2045;
    var _312:Number = 6.67428e-11 * d2052;
    var _313:Number = d2051 - d2046;
    var _314:Number = Math.sqrt(_311 * _311 + _313 * _313);
    var _315:Number = _312 / (_314 * _314 * _314);
    var _316:Number = _306 * _310 + _311 * _315;
    var _317:Number = d2045 + d2048 + (DVx + _316) * 0.5;
    var _318:Number = _317 - d2040;
    var _319:Number = _308 * _310 + _313 * _315;
    var _320:Number = d2046 + d2049 + (DVy + _319) * 0.5;
    var _321:Number = _320 - d2041;
    var _322:Number = _317 - d2050;
    var _323:Number = _320 - d2051;
    var _324:Number = Math.sqrt(DVx * DVx + DVy * DVy);
    var _325:Number = d2115 - _324;
    var _326:Number = d2040 - d2055;
    var _327:Number = d2041 - d2056;
    var _328:Number = Math.sqrt(_326 * _326 + _327 * _327);
    var _329:Number = _307 / (_328 * _328 * _328);
    var _330:Number = d2050 - d2055;
    var _331:Number = d2051 - d2056;
    var _332:Number = Math.sqrt(_330 * _330 + _331 * _331);
    var _333:Number = _312 / (_332 * _332 * _332);
    var _334:Number = _326 * _329 + _330 * _333;
    var _335:Number = d2055 + d2058 + _334 * 0.5;
    var _336:Number = _317 - _335;
    var _337:Number = _327 * _329 + _331 * _333;
    var _338:Number = d2056 + d2059 + _337 * 0.5;
    var _339:Number = _320 - _338;
    var _340:Number = Math.sqrt(_336 * _336 + _339 * _339) - 1000;
    var _341:Number = 10000 - _325;
    var _342:Number = _340 < 0 ? _341 - d2128 < 0 ? _341 : d2128 : 0;
    var _343:Number = _325 + _342;
    var _344:Number = 2e+06 - d2039;
    var _345:Number = d2040 - d2060;
    var _346:Number = d2041 - d2061;
    var _347:Number = Math.sqrt(_345 * _345 + _346 * _346);
    var _348:Number = _307 / (_347 * _347 * _347);
    var _349:Number = d2050 - d2060;
    var _350:Number = d2051 - d2061;
    var _351:Number = Math.sqrt(_349 * _349 + _350 * _350);
    var _352:Number = _312 / (_351 * _351 * _351);
    var _353:Number = _345 * _348 + _349 * _352;
    var _354:Number = d2060 + d2063 + _353 * 0.5;
    var _355:Number = _317 - _354;
    var _356:Number = _346 * _348 + _350 * _352;
    var _357:Number = d2061 + d2064 + _356 * 0.5;
    var _358:Number = _320 - _357;
    var _359:Number = d2117 == 0 ? Math.sqrt(_355 * _355 + _358 * _358) - 1000 < 0 ? _344 : d2117 : d2117;
    var _360:Number = d2040 - d2065;
    var _361:Number = d2041 - d2066;
    var _362:Number = Math.sqrt(_360 * _360 + _361 * _361);
    var _363:Number = _307 / (_362 * _362 * _362);
    var _364:Number = d2050 - d2065;
    var _365:Number = d2051 - d2066;
    var _366:Number = Math.sqrt(_364 * _364 + _365 * _365);
    var _367:Number = _312 / (_366 * _366 * _366);
    var _368:Number = _360 * _363 + _364 * _367;
    var _369:Number = d2065 + d2068 + _368 * 0.5;
    var _370:Number = _317 - _369;
    var _371:Number = _361 * _363 + _365 * _367;
    var _372:Number = d2066 + d2069 + _371 * 0.5;
    var _373:Number = _320 - _372;
    var _374:Number = d2118 == 0 ? Math.sqrt(_370 * _370 + _373 * _373) - 1000 < 0 ? _344 : d2118 : d2118;
    var _375:Number = d2040 - d2070;
    var _376:Number = d2041 - d2071;
    var _377:Number = Math.sqrt(_375 * _375 + _376 * _376);
    var _378:Number = _307 / (_377 * _377 * _377);
    var _379:Number = d2050 - d2070;
    var _380:Number = d2051 - d2071;
    var _381:Number = Math.sqrt(_379 * _379 + _380 * _380);
    var _382:Number = _312 / (_381 * _381 * _381);
    var _383:Number = _375 * _378 + _379 * _382;
    var _384:Number = d2070 + d2073 + _383 * 0.5;
    var _385:Number = _317 - _384;
    var _386:Number = _376 * _378 + _380 * _382;
    var _387:Number = d2071 + d2074 + _386 * 0.5;
    var _388:Number = _320 - _387;
    var _389:Number = d2119 == 0 ? Math.sqrt(_385 * _385 + _388 * _388) - 1000 < 0 ? _344 : d2119 : d2119;
    var _390:Number = d2040 - d2075;
    var _391:Number = d2041 - d2076;
    var _392:Number = Math.sqrt(_390 * _390 + _391 * _391);
    var _393:Number = _307 / (_392 * _392 * _392);
    var _394:Number = d2050 - d2075;
    var _395:Number = d2051 - d2076;
    var _396:Number = Math.sqrt(_394 * _394 + _395 * _395);
    var _397:Number = _312 / (_396 * _396 * _396);
    var _398:Number = _390 * _393 + _394 * _397;
    var _399:Number = d2075 + d2078 + _398 * 0.5;
    var _400:Number = _317 - _399;
    var _401:Number = _391 * _393 + _395 * _397;
    var _402:Number = d2076 + d2079 + _401 * 0.5;
    var _403:Number = _320 - _402;
    var _404:Number = d2120 == 0 ? Math.sqrt(_400 * _400 + _403 * _403) - 1000 < 0 ? _344 : d2120 : d2120;
    var _405:Number = d2040 - d2080;
    var _406:Number = d2041 - d2081;
    var _407:Number = Math.sqrt(_405 * _405 + _406 * _406);
    var _408:Number = _307 / (_407 * _407 * _407);
    var _409:Number = d2050 - d2080;
    var _410:Number = d2051 - d2081;
    var _411:Number = Math.sqrt(_409 * _409 + _410 * _410);
    var _412:Number = _312 / (_411 * _411 * _411);
    var _413:Number = _405 * _408 + _409 * _412;
    var _414:Number = d2080 + d2083 + _413 * 0.5;
    var _415:Number = _317 - _414;
    var _416:Number = _406 * _408 + _410 * _412;
    var _417:Number = d2081 + d2084 + _416 * 0.5;
    var _418:Number = _320 - _417;
    var _419:Number = d2121 == 0 ? Math.sqrt(_415 * _415 + _418 * _418) - 1000 < 0 ? _344 : d2121 : d2121;
    var _420:Number = d2040 - d2085;
    var _421:Number = d2041 - d2086;
    var _422:Number = Math.sqrt(_420 * _420 + _421 * _421);
    var _423:Number = _307 / (_422 * _422 * _422);
    var _424:Number = d2050 - d2085;
    var _425:Number = d2051 - d2086;
    var _426:Number = Math.sqrt(_424 * _424 + _425 * _425);
    var _427:Number = _312 / (_426 * _426 * _426);
    var _428:Number = _420 * _423 + _424 * _427;
    var _429:Number = d2085 + d2088 + _428 * 0.5;
    var _430:Number = _317 - _429;
    var _431:Number = _421 * _423 + _425 * _427;
    var _432:Number = d2086 + d2089 + _431 * 0.5;
    var _433:Number = _320 - _432;
    var _434:Number = d2122 == 0 ? Math.sqrt(_430 * _430 + _433 * _433) - 1000 < 0 ? _344 : d2122 : d2122;
    var _435:Number = d2040 - d2090;
    var _436:Number = d2041 - d2091;
    var _437:Number = Math.sqrt(_435 * _435 + _436 * _436);
    var _438:Number = _307 / (_437 * _437 * _437);
    var _439:Number = d2050 - d2090;
    var _440:Number = d2051 - d2091;
    var _441:Number = Math.sqrt(_439 * _439 + _440 * _440);
    var _442:Number = _312 / (_441 * _441 * _441);
    var _443:Number = _435 * _438 + _439 * _442;
    var _444:Number = d2090 + d2093 + _443 * 0.5;
    var _445:Number = _317 - _444;
    var _446:Number = _436 * _438 + _440 * _442;
    var _447:Number = d2091 + d2094 + _446 * 0.5;
    var _448:Number = _320 - _447;
    var _449:Number = d2123 == 0 ? Math.sqrt(_445 * _445 + _448 * _448) - 1000 < 0 ? _344 : d2123 : d2123;
    var _450:Number = d2040 - d2095;
    var _451:Number = d2041 - d2096;
    var _452:Number = Math.sqrt(_450 * _450 + _451 * _451);
    var _453:Number = _307 / (_452 * _452 * _452);
    var _454:Number = d2050 - d2095;
    var _455:Number = d2051 - d2096;
    var _456:Number = Math.sqrt(_454 * _454 + _455 * _455);
    var _457:Number = _312 / (_456 * _456 * _456);
    var _458:Number = _450 * _453 + _454 * _457;
    var _459:Number = d2095 + d2098 + _458 * 0.5;
    var _460:Number = _317 - _459;
    var _461:Number = _451 * _453 + _455 * _457;
    var _462:Number = d2096 + d2099 + _461 * 0.5;
    var _463:Number = _320 - _462;
    var _464:Number = d2124 == 0 ? Math.sqrt(_460 * _460 + _463 * _463) - 1000 < 0 ? _344 : d2124 : d2124;
    var _465:Number = d2040 - d2100;
    var _466:Number = d2041 - d2101;
    var _467:Number = Math.sqrt(_465 * _465 + _466 * _466);
    var _468:Number = _307 / (_467 * _467 * _467);
    var _469:Number = d2050 - d2100;
    var _470:Number = d2051 - d2101;
    var _471:Number = Math.sqrt(_469 * _469 + _470 * _470);
    var _472:Number = _312 / (_471 * _471 * _471);
    var _473:Number = _465 * _468 + _469 * _472;
    var _474:Number = d2100 + d2103 + _473 * 0.5;
    var _475:Number = _317 - _474;
    var _476:Number = _466 * _468 + _470 * _472;
    var _477:Number = d2101 + d2104 + _476 * 0.5;
    var _478:Number = _320 - _477;
    var _479:Number = d2125 == 0 ? Math.sqrt(_475 * _475 + _478 * _478) - 1000 < 0 ? _344 : d2125 : d2125;
    var _480:Number = d2040 - d2105;
    var _481:Number = d2041 - d2106;
    var _482:Number = Math.sqrt(_480 * _480 + _481 * _481);
    var _483:Number = _307 / (_482 * _482 * _482);
    var _484:Number = d2050 - d2105;
    var _485:Number = d2051 - d2106;
    var _486:Number = Math.sqrt(_484 * _484 + _485 * _485);
    var _487:Number = _312 / (_486 * _486 * _486);
    var _488:Number = _480 * _483 + _484 * _487;
    var _489:Number = d2105 + d2108 + _488 * 0.5;
    var _490:Number = _317 - _489;
    var _491:Number = _481 * _483 + _485 * _487;
    var _492:Number = d2106 + d2109 + _491 * 0.5;
    var _493:Number = _320 - _492;
    var _494:Number = d2126 == 0 ? Math.sqrt(_490 * _490 + _493 * _493) - 1000 < 0 ? _344 : d2126 : d2126;
    var _495:Number = d2040 - d2110;
    var _496:Number = d2041 - d2111;
    var _497:Number = Math.sqrt(_495 * _495 + _496 * _496);
    var _498:Number = _307 / (_497 * _497 * _497);
    var _499:Number = d2050 - d2110;
    var _500:Number = d2051 - d2111;
    var _501:Number = Math.sqrt(_499 * _499 + _500 * _500);
    var _502:Number = _312 / (_501 * _501 * _501);
    var _503:Number = _495 * _498 + _499 * _502;
    var _504:Number = d2110 + d2113 + _503 * 0.5;
    var _505:Number = _317 - _504;
    var _506:Number = _496 * _498 + _500 * _502;
    var _507:Number = d2111 + d2114 + _506 * 0.5;
    var _508:Number = _320 - _507;
    var _509:Number = d2127 == 0 ? Math.sqrt(_505 * _505 + _508 * _508) - 1000 < 0 ? _344 : d2127 : d2127;
    output[0] = Math.sqrt(_318 * _318 + _321 * _321) - 6.357e+06 < 0 ? -1 : Math.sqrt(_322 * _322 + _323 * _323) - 1.738e+06 < 0 ? -1 : 10000 - _324 < 0 ? -1 : _343 < 0 ? -1 : _344 == 0 ? (25 * (d2128 - _342 + _343) / 85000 + 75 * ((d2116 == 0 ? _340 < 0 ? _344 : d2116 : d2116) + _359 + _374 + _389 + _404 + _419 + _434 + _449 + _464 + _479 + _494 + _509) / 2.4e+07) * 8 : 0;
    output[1] = _343;
    var _510:Number = d2040 - _317;
    output[2] = _510;
    var _511:Number = d2041 - _320;
    output[3] = _511;
    output[4] = _335 - _317;
    output[5] = _338 - _320;
    output[6] = d2128 - _342;
    output[7] = _354 - _317;
    output[8] = _357 - _320;
    output[9] = _359 == 0 ? 0 : 1;
    output[10] = _369 - _317;
    output[11] = _372 - _320;
    output[12] = _374 == 0 ? 0 : 1;
    output[13] = _384 - _317;
    output[14] = _387 - _320;
    output[15] = _389 == 0 ? 0 : 1;
    output[16] = _399 - _317;
    output[17] = _402 - _320;
    output[18] = _404 == 0 ? 0 : 1;
    output[19] = _414 - _317;
    output[20] = _417 - _320;
    output[21] = _419 == 0 ? 0 : 1;
    output[22] = _429 - _317;
    output[23] = _432 - _320;
    output[24] = _434 == 0 ? 0 : 1;
    output[25] = _444 - _317;
    output[26] = _447 - _320;
    output[27] = _449 == 0 ? 0 : 1;
    output[28] = _459 - _317;
    output[29] = _462 - _320;
    output[30] = _464 == 0 ? 0 : 1;
    output[31] = _474 - _317;
    output[32] = _477 - _320;
    output[33] = _479 == 0 ? 0 : 1;
    output[34] = _489 - _317;
    output[35] = _492 - _320;
    output[36] = _494 == 0 ? 0 : 1;
    output[37] = _504 - _317;
    output[38] = _507 - _320;
    output[39] = _509 == 0 ? 0 : 1;
    var _512:Number = d2040 - d2050;
    var _513:Number = d2041 - d2051;
    var _514:Number = Math.sqrt(_512 * _512 + _513 * _513);
    var _515:Number = _307 / (_514 * _514 * _514);
    var _516:Number = _512 * _515;
    var _517:Number = d2050 + d2053 + _516 * 0.5;
    output[100] = _517 - _317;
    var _518:Number = _513 * _515;
    var _519:Number = d2051 + d2054 + _518 * 0.5;
    output[101] = _519 - _320;
    d2039 = d2039 + 1;
    d2040 = d2040;
    d2041 = d2041;
    d2042 = d2042;
    d2043 = d2043;
    d2044 = d2044;
    d2045 = _317;
    d2046 = _320;
    d2047 = d2047;
    var _520:Number = Math.sqrt(_510 * _510 + _511 * _511);
    var _521:Number = _307 / (_520 * _520 * _520);
    var _522:Number = d2050 - _317;
    var _523:Number = d2051 - _320;
    var _524:Number = Math.sqrt(_522 * _522 + _523 * _523);
    var _525:Number = _312 / (_524 * _524 * _524);
    d2048 = d2048 + DVx + (_510 * _521 + _522 * _525 + _316) / 2;
    d2049 = d2049 + DVy + (_511 * _521 + _523 * _525 + _319) / 2;
    d2050 = _517;
    d2051 = _519;
    d2052 = d2052;
    var _526:Number = d2040 - _517;
    var _527:Number = d2041 - _519;
    var _528:Number = Math.sqrt(_526 * _526 + _527 * _527);
    var _529:Number = _307 / (_528 * _528 * _528);
    d2053 = d2053 + (_526 * _529 + _516) / 2;
    d2054 = d2054 + (_527 * _529 + _518) / 2;
    d2055 = _335;
    d2056 = _338;
    d2057 = d2057;
    var _530:Number = d2040 - _335;
    var _531:Number = d2041 - _338;
    var _532:Number = Math.sqrt(_530 * _530 + _531 * _531);
    var _533:Number = _307 / (_532 * _532 * _532);
    var _534:Number = d2050 - _335;
    var _535:Number = d2051 - _338;
    var _536:Number = Math.sqrt(_534 * _534 + _535 * _535);
    var _537:Number = _312 / (_536 * _536 * _536);
    d2058 = d2058 + (_530 * _533 + _534 * _537 + _334) / 2;
    d2059 = d2059 + (_531 * _533 + _535 * _537 + _337) / 2;
    d2060 = _354;
    d2061 = _357;
    d2062 = d2062;
    var _538:Number = d2040 - _354;
    var _539:Number = d2041 - _357;
    var _540:Number = Math.sqrt(_538 * _538 + _539 * _539);
    var _541:Number = _307 / (_540 * _540 * _540);
    var _542:Number = d2050 - _354;
    var _543:Number = d2051 - _357;
    var _544:Number = Math.sqrt(_542 * _542 + _543 * _543);
    var _545:Number = _312 / (_544 * _544 * _544);
    d2063 = d2063 + (_538 * _541 + _542 * _545 + _353) / 2;
    d2064 = d2064 + (_539 * _541 + _543 * _545 + _356) / 2;
    d2065 = _369;
    d2066 = _372;
    d2067 = d2067;
    var _546:Number = d2040 - _369;
    var _547:Number = d2041 - _372;
    var _548:Number = Math.sqrt(_546 * _546 + _547 * _547);
    var _549:Number = _307 / (_548 * _548 * _548);
    var _550:Number = d2050 - _369;
    var _551:Number = d2051 - _372;
    var _552:Number = Math.sqrt(_550 * _550 + _551 * _551);
    var _553:Number = _312 / (_552 * _552 * _552);
    d2068 = d2068 + (_546 * _549 + _550 * _553 + _368) / 2;
    d2069 = d2069 + (_547 * _549 + _551 * _553 + _371) / 2;
    d2070 = _384;
    d2071 = _387;
    d2072 = d2072;
    var _554:Number = d2040 - _384;
    var _555:Number = d2041 - _387;
    var _556:Number = Math.sqrt(_554 * _554 + _555 * _555);
    var _557:Number = _307 / (_556 * _556 * _556);
    var _558:Number = d2050 - _384;
    var _559:Number = d2051 - _387;
    var _560:Number = Math.sqrt(_558 * _558 + _559 * _559);
    var _561:Number = _312 / (_560 * _560 * _560);
    d2073 = d2073 + (_554 * _557 + _558 * _561 + _383) / 2;
    d2074 = d2074 + (_555 * _557 + _559 * _561 + _386) / 2;
    d2075 = _399;
    d2076 = _402;
    d2077 = d2077;
    var _562:Number = d2040 - _399;
    var _563:Number = d2041 - _402;
    var _564:Number = Math.sqrt(_562 * _562 + _563 * _563);
    var _565:Number = _307 / (_564 * _564 * _564);
    var _566:Number = d2050 - _399;
    var _567:Number = d2051 - _402;
    var _568:Number = Math.sqrt(_566 * _566 + _567 * _567);
    var _569:Number = _312 / (_568 * _568 * _568);
    d2078 = d2078 + (_562 * _565 + _566 * _569 + _398) / 2;
    d2079 = d2079 + (_563 * _565 + _567 * _569 + _401) / 2;
    d2080 = _414;
    d2081 = _417;
    d2082 = d2082;
    var _570:Number = d2040 - _414;
    var _571:Number = d2041 - _417;
    var _572:Number = Math.sqrt(_570 * _570 + _571 * _571);
    var _573:Number = _307 / (_572 * _572 * _572);
    var _574:Number = d2050 - _414;
    var _575:Number = d2051 - _417;
    var _576:Number = Math.sqrt(_574 * _574 + _575 * _575);
    var _577:Number = _312 / (_576 * _576 * _576);
    d2083 = d2083 + (_570 * _573 + _574 * _577 + _413) / 2;
    d2084 = d2084 + (_571 * _573 + _575 * _577 + _416) / 2;
    d2085 = _429;
    d2086 = _432;
    d2087 = d2087;
    var _578:Number = d2040 - _429;
    var _579:Number = d2041 - _432;
    var _580:Number = Math.sqrt(_578 * _578 + _579 * _579);
    var _581:Number = _307 / (_580 * _580 * _580);
    var _582:Number = d2050 - _429;
    var _583:Number = d2051 - _432;
    var _584:Number = Math.sqrt(_582 * _582 + _583 * _583);
    var _585:Number = _312 / (_584 * _584 * _584);
    d2088 = d2088 + (_578 * _581 + _582 * _585 + _428) / 2;
    d2089 = d2089 + (_579 * _581 + _583 * _585 + _431) / 2;
    d2090 = _444;
    d2091 = _447;
    d2092 = d2092;
    var _586:Number = d2040 - _444;
    var _587:Number = d2041 - _447;
    var _588:Number = Math.sqrt(_586 * _586 + _587 * _587);
    var _589:Number = _307 / (_588 * _588 * _588);
    var _590:Number = d2050 - _444;
    var _591:Number = d2051 - _447;
    var _592:Number = Math.sqrt(_590 * _590 + _591 * _591);
    var _593:Number = _312 / (_592 * _592 * _592);
    d2093 = d2093 + (_586 * _589 + _590 * _593 + _443) / 2;
    d2094 = d2094 + (_587 * _589 + _591 * _593 + _446) / 2;
    d2095 = _459;
    d2096 = _462;
    d2097 = d2097;
    var _594:Number = d2040 - _459;
    var _595:Number = d2041 - _462;
    var _596:Number = Math.sqrt(_594 * _594 + _595 * _595);
    var _597:Number = _307 / (_596 * _596 * _596);
    var _598:Number = d2050 - _459;
    var _599:Number = d2051 - _462;
    var _600:Number = Math.sqrt(_598 * _598 + _599 * _599);
    var _601:Number = _312 / (_600 * _600 * _600);
    d2098 = d2098 + (_594 * _597 + _598 * _601 + _458) / 2;
    d2099 = d2099 + (_595 * _597 + _599 * _601 + _461) / 2;
    d2100 = _474;
    d2101 = _477;
    d2102 = d2102;
    var _602:Number = d2040 - _474;
    var _603:Number = d2041 - _477;
    var _604:Number = Math.sqrt(_602 * _602 + _603 * _603);
    var _605:Number = _307 / (_604 * _604 * _604);
    var _606:Number = d2050 - _474;
    var _607:Number = d2051 - _477;
    var _608:Number = Math.sqrt(_606 * _606 + _607 * _607);
    var _609:Number = _312 / (_608 * _608 * _608);
    d2103 = d2103 + (_602 * _605 + _606 * _609 + _473) / 2;
    d2104 = d2104 + (_603 * _605 + _607 * _609 + _476) / 2;
    d2105 = _489;
    d2106 = _492;
    d2107 = d2107;
    var _610:Number = d2040 - _489;
    var _611:Number = d2041 - _492;
    var _612:Number = Math.sqrt(_610 * _610 + _611 * _611);
    var _613:Number = _307 / (_612 * _612 * _612);
    var _614:Number = d2050 - _489;
    var _615:Number = d2051 - _492;
    var _616:Number = Math.sqrt(_614 * _614 + _615 * _615);
    var _617:Number = _312 / (_616 * _616 * _616);
    d2108 = d2108 + (_610 * _613 + _614 * _617 + _488) / 2;
    d2109 = d2109 + (_611 * _613 + _615 * _617 + _491) / 2;
    d2110 = _504;
    d2111 = _507;
    d2112 = d2112;
    var _618:Number = d2040 - _504;
    var _619:Number = d2041 - _507;
    var _620:Number = Math.sqrt(_618 * _618 + _619 * _619);
    var _621:Number = _307 / (_620 * _620 * _620);
    var _622:Number = d2050 - _504;
    var _623:Number = d2051 - _507;
    var _624:Number = Math.sqrt(_622 * _622 + _623 * _623);
    var _625:Number = _312 / (_624 * _624 * _624);
    d2113 = d2113 + (_618 * _621 + _622 * _625 + _503) / 2;
    d2114 = d2114 + (_619 * _621 + _623 * _625 + _506) / 2;
    d2115 = _343;
    d2116 = d2116 == 0 ? _340 < 0 ? _344 : d2116 : d2116;
    d2117 = _359;
    d2118 = _374;
    d2119 = _389;
    d2120 = _404;
    d2121 = _419;
    d2122 = _434;
    d2123 = _449;
    d2124 = _464;
    d2125 = _479;
    d2126 = _494;
    d2127 = _509;
    d2128 = d2128 - _342;
  }
}

class BuildInfo { public static var buildnum:int=77; }
